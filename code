import itertools
import string

def generate_wordlist(charset, min_length, max_length, output_file, fixed_chars):
    with open(output_file, 'w') as f:
        generated_words = set()  # Usar um conjunto para evitar duplicatas
        for length in range(min_length, max_length + 1):
            words = itertools.product(charset, repeat=length)
            for word_tuple in words:
                word = list(word_tuple)
                for position, char in fixed_chars.items():
                    if 0 <= position < length:
                        word[position] = char
                generated_word = ''.join(word)
                if generated_word not in generated_words:
                    f.write(generated_word + '\n')
                    generated_words.add(generated_word)

def main():
    print("-------------------------------------------------")
    print("           Crunch - Wordlist Generator           ")
    print("-------------------------------------------------")
    print()

    charset = input("Digite o conjunto de caracteres: ")
    if not charset:
        charset = string.ascii_letters + string.digits + string.punctuation

    try:
        min_length = int(input("Digite o comprimento mínimo da palavra (1): "))
    except:
        min_length = 1

    try:
        max_length = int(input("Digite o comprimento máximo da palavra (8): "))
    except:
        max_length = 8

    output_file = input("Digite o nome do arquivo de saída (wordlist.txt): ")
    if not output_file:
        output_file = 'wordlist.txt'

    fixed_chars = {}
    while True:
        position = input("Digite a posição do caractere a ser fixado (Início em 0) ou pressione Enter para continuar: ")
        if not position: break
        char = input("Digite o caractere a ser fixado na posição: ")
        if char and position.isdigit(): 
            fixed_chars[int(position)] = char

    print()
    print(f"Gerando a wordlist com as seguintes opções:")
    print(f"Conjunto de Caracteres: {charset}")
    print(f"Comprimento Mínimo: {min_length}")
    print(f"Comprimento Máximo: {max_length}")
    print(f"Nome do Arquivo de Saída: {output_file}")
    print(f"Caracteres Fixados: {fixed_chars}")
    print()

    confirm = input("Pressione Enter para gerar a wordlist com as opções acima ou insira 'N' para cancelar: ")

    if confirm.lower() == 'n':
        print("Operação cancelada.")
    else:
        generate_wordlist(charset, min_length, max_length, output_file, fixed_chars)
        print(f"Wordlist gerada e salva como '{output_file}'")

if __name__ == "__main__":
    main()
